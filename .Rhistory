shiny::runApp('~/Documents/GitHub/UtilityAnalysis/features/correlation-slider')
shiny::runApp('~/Documents/GitHub/Cursor Tutorial/hr-budget-shiny')
runApp('~/Documents/GitHub/Cursor Tutorial/hr-budget-shiny')
runApp('~/Documents/GitHub/Cursor Tutorial/hr-budget-shiny')
runApp('~/Documents/GitHub/Cursor Tutorial/hr-budget-shiny')
runApp('~/Documents/GitHub/Cursor Tutorial/hr-budget-shiny')
runApp('~/Documents/GitHub/Cursor Tutorial/hr-budget-shiny')
setwd("~/Documents/GitHub/Website/PAL-of-the-Bayou")
set.seed(123)
library(lme4)
library(dplyr)
n_groups <- 30
n_per_group <- 20
group <- rep(1:n_groups, each=n_per_group)
group_effect_X <- rnorm(n_groups, mean=0, sd=1)
group_effect_Y <- rnorm(n_groups, mean=0, sd=1)
X <- rep(group_effect_X, each=n_per_group) + rnorm(n_groups*n_per_group, sd=1)
Y <- 0.6*X + rep(group_effect_Y, each=n_per_group) + rnorm(n_groups*n_per_group, sd=1)
dat <- data.frame(group=factor(group), X, Y)
# Correlations
cor_total <- cor(dat$X, dat$Y)
cat("Total correlation:\n")
print(cor_total)
dat_group <- dat %>%
group_by(group) %>%
summarize(X = mean(X), Y = mean(Y))
cor_between <- cor(dat_group$X, dat_group$Y)
cat("Between-group correlation:\n")
print(cor_between)
dat_within <- dat %>%
group_by(group) %>%
mutate(Xc = X - mean(X),
Yc = Y - mean(Y))
cor_within <- cor(dat_within$Xc, dat_within$Yc)
cat("Within-group correlation:\n")
print(cor_within)
# Regressions
lm_total <- lm(Y ~ X, data=dat)
cat("\nTotal regression (ignores grouping):\n")
print(summary(lm_total)$coef)
lmm <- lmer(Y ~ X + (1 | group), data=dat)
cat("\nMultilevel regression (random intercept):\n")
print(summary(lmm)$coef)
# Group mean centering (within-group effect)
dat$X_within <- dat$X - ave(dat$X, dat$group)
lm_within <- lm(Y ~ X_within, data=dat)
cat("\nWithin-group regression (group mean centered X):\n")
print(summary(lm_within)$coef)
# Load necessary libraries
set.seed(123)
library(lme4)
library(dplyr)
# ---- Simulate Multilevel Data ----
n_groups <- 30
n_per_group <- 20
group <- rep(1:n_groups, each=n_per_group)
# Simulate group-level effects
group_effect_X <- rnorm(n_groups, mean=0, sd=1)
group_effect_Y <- rnorm(n_groups, mean=0, sd=1)
# Generate data
X <- rep(group_effect_X, each=n_per_group) + rnorm(n_groups * n_per_group, sd=1)
Y <- 0.6 * X + rep(group_effect_Y, each=n_per_group) + rnorm(n_groups * n_per_group, sd=1)
dat <- data.frame(group = factor(group), X, Y)
# ---- Compute Correlations ----
# Total correlation
cor_total <- cor(dat$X, dat$Y)
# Between-group correlation (using group means)
dat_group <- dat %>%
group_by(group) %>%
summarize(X = mean(X), Y = mean(Y))
cor_between <- cor(dat_group$X, dat_group$Y)
# Within-group correlation (after removing group means)
dat_within <- dat %>%
group_by(group) %>%
mutate(Xc = X - mean(X),
Yc = Y - mean(Y))
cor_within <- cor(dat_within$Xc, dat_within$Yc)
# ---- Fit Regression Models ----
# 1. Simple regression (ignores groups)
lm_total <- lm(Y ~ X, data=dat)
# 2. Multilevel regression (random intercepts)
lmm <- lmer(Y ~ X + (1 | group), data=dat)
# 3. Within-group regression (group mean centered predictor)
dat$X_within <- dat$X - ave(dat$X, dat$group)
lm_within <- lm(Y ~ X_within, data=dat)
# ---- Output Results ----
cat("CORRELATIONS\n")
cat(sprintf("Total correlation (X, Y):        %.3f\n", cor_total))
cat(sprintf("Between-group correlation:       %.3f\n", cor_between))
cat(sprintf("Within-group correlation:        %.3f\n\n", cor_within))
cat("REGRESSION COEFFICIENTS (Slope for X)\n")
cat(sprintf("Total regression:                %.3f\n", coef(lm_total)["X"]))
cat(sprintf("Within-group regression:         %.3f\n", coef(lm_within)["X_within"]))
cat(sprintf("Multilevel regression (lmer):    %.3f\n\n", fixef(lmm)["X"]))
cat("SUMMARY TABLE\n")
cat(sprintf("%-25s %-10s %-10s\n", "Type", "Correlation", "Coefficient"))
cat(sprintf("%-25s %-10.3f %-10.3f\n", "Total", cor_total, coef(lm_total)["X"]))
cat(sprintf("%-25s %-10.3f %-10.3f\n", "Between-group", cor_between, NA))
cat(sprintf("%-25s %-10.3f %-10.3f\n", "Within-group", cor_within, coef(lm_within)["X_within"]))
cat(sprintf("%-25s %-10s %-10.3f\n", "Multilevel (lmer)", "", fixef(lmm)["X"]))
# Load libraries
set.seed(123)
library(lme4)
library(dplyr)
# ---- Simulate Multilevel Data ----
n_groups <- 30
n_per_group <- 20
group <- rep(1:n_groups, each=n_per_group)
# Simulate group-level effects
group_effect_X <- rnorm(n_groups, mean=0, sd=1)
group_effect_Y <- rnorm(n_groups, mean=0, sd=1)
# Generate data
X <- rep(group_effect_X, each=n_per_group) + rnorm(n_groups * n_per_group, sd=1)
Y <- 0.6 * X + rep(group_effect_Y, each=n_per_group) + rnorm(n_groups * n_per_group, sd=1)
dat <- data.frame(group = factor(group), X, Y)
# ---- Correlation Matrices ----
cat("CORRELATION MATRICES\n")
# Total correlation matrix (raw data)
cor_total_matrix <- cor(dat[, c("X", "Y")])
cat("\nTotal (raw data):\n")
print(round(cor_total_matrix, 3))
# Between-group correlation matrix (group means)
dat_group <- dat %>%
group_by(group) %>%
summarize(X = mean(X), Y = mean(Y), .groups = 'drop')
cor_between_matrix <- cor(dat_group[, c("X", "Y")])
cat("\nBetween-group (group means):\n")
print(round(cor_between_matrix, 3))
# Within-group correlation matrix (centered data)
dat_within <- dat %>%
group_by(group) %>%
mutate(Xc = X - mean(X),
Yc = Y - mean(Y))
cor_within_matrix <- cor(dat_within[, c("Xc", "Yc")])
cat("\nWithin-group (centered data):\n")
print(round(cor_within_matrix, 3))
# ---- Regression Models ----
# 1. Simple regression (ignores groups)
lm_total <- lm(Y ~ X, data=dat)
# 2. Multilevel regression (random intercepts)
lmm <- lmer(Y ~ X + (1 | group), data=dat)
# 3. Within-group regression (group mean centered predictor)
dat$X_within <- dat$X - ave(dat$X, dat$group)
lm_within <- lm(Y ~ X_within, data=dat)
# ---- Output Results ----
cat("\nSIMPLE CORRELATIONS\n")
cat(sprintf("Total correlation (X, Y):        %.3f\n", cor_total_matrix[1,2]))
cat(sprintf("Between-group correlation:       %.3f\n", cor_between_matrix[1,2]))
cat(sprintf("Within-group correlation:        %.3f\n\n", cor_within_matrix[1,2]))
cat("REGRESSION COEFFICIENTS (Slope for X)\n")
cat(sprintf("Total regression:                %.3f\n", coef(lm_total)["X"]))
cat(sprintf("Within-group regression:         %.3f\n", coef(lm_within)["X_within"]))
cat(sprintf("Multilevel regression (lmer):    %.3f\n\n", fixef(lmm)["X"]))
cat("SUMMARY TABLE\n")
cat(sprintf("%-25s %-10s %-10s\n", "Type", "Correlation", "Coefficient"))
cat(sprintf("%-25s %-10.3f %-10.3f\n", "Total", cor_total_matrix[1,2], coef(lm_total)["X"]))
cat(sprintf("%-25s %-10.3f %-10s\n", "Between-group", cor_between_matrix[1,2], "NA"))
cat(sprintf("%-25s %-10.3f %-10.3f\n", "Within-group", cor_within_matrix[1,2], coef(lm_within)["X_within"]))
cat(sprintf("%-25s %-10s %-10.3f\n", "Multilevel (lmer)", "", fixef(lmm)["X"]))
summary(lm_total)
summary(lmm)
summary(lm_within)
dat
source("/Users/ccastille/Documents/GitHub/Website/PAL-of-the-Bayou/correlation_learning_app/deploy_app.R")
source("/Users/ccastille/Documents/GitHub/Website/PAL-of-the-Bayou/correlation_learning_app/deploy_app.R")
source("/Users/ccastille/Documents/GitHub/Website/PAL-of-the-Bayou/correlation_learning_app/deploy_app.R")
source("database_setup.R")
install.packages("RSQLite")
source("database_setup.R")
source("download_data.R")
source("setup_complete_system.R")
source("deploy_app.R")
shiny::runApp("admin_dashboard.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
